// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.1
// source: movie.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Film struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            int64                  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	ReleaseYear   string                 `protobuf:"bytes,3,opt,name=ReleaseYear,proto3" json:"ReleaseYear,omitempty"`
	Director      string                 `protobuf:"bytes,4,opt,name=Director,proto3" json:"Director,omitempty"`
	Genre         string                 `protobuf:"bytes,5,opt,name=Genre,proto3" json:"Genre,omitempty"`
	Rating        float64                `protobuf:"fixed64,6,opt,name=Rating,proto3" json:"Rating,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Film) Reset() {
	*x = Film{}
	mi := &file_movie_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Film) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Film) ProtoMessage() {}

func (x *Film) ProtoReflect() protoreflect.Message {
	mi := &file_movie_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Film.ProtoReflect.Descriptor instead.
func (*Film) Descriptor() ([]byte, []int) {
	return file_movie_proto_rawDescGZIP(), []int{0}
}

func (x *Film) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Film) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Film) GetReleaseYear() string {
	if x != nil {
		return x.ReleaseYear
	}
	return ""
}

func (x *Film) GetDirector() string {
	if x != nil {
		return x.Director
	}
	return ""
}

func (x *Film) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *Film) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

type FilmRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            int32                  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilmRequest) Reset() {
	*x = FilmRequest{}
	mi := &file_movie_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmRequest) ProtoMessage() {}

func (x *FilmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmRequest.ProtoReflect.Descriptor instead.
func (*FilmRequest) Descriptor() ([]byte, []int) {
	return file_movie_proto_rawDescGZIP(), []int{1}
}

func (x *FilmRequest) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type FilmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilmResponse) Reset() {
	*x = FilmResponse{}
	mi := &file_movie_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmResponse) ProtoMessage() {}

func (x *FilmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmResponse.ProtoReflect.Descriptor instead.
func (*FilmResponse) Descriptor() ([]byte, []int) {
	return file_movie_proto_rawDescGZIP(), []int{2}
}

func (x *FilmResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_movie_proto protoreflect.FileDescriptor

const file_movie_proto_rawDesc = "" +
	"\n" +
	"\vmovie.proto\x12\x05movie\"\x98\x01\n" +
	"\x04Film\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x03R\x02ID\x12\x14\n" +
	"\x05Title\x18\x02 \x01(\tR\x05Title\x12 \n" +
	"\vReleaseYear\x18\x03 \x01(\tR\vReleaseYear\x12\x1a\n" +
	"\bDirector\x18\x04 \x01(\tR\bDirector\x12\x14\n" +
	"\x05Genre\x18\x05 \x01(\tR\x05Genre\x12\x16\n" +
	"\x06Rating\x18\x06 \x01(\x01R\x06Rating\"\x1d\n" +
	"\vFilmRequest\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x05R\x02ID\"(\n" +
	"\fFilmResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2\xd1\x01\n" +
	"\fMovieService\x12.\n" +
	"\n" +
	"CreateFilm\x12\v.movie.Film\x1a\x13.movie.FilmResponse\x12*\n" +
	"\aGetFilm\x12\x12.movie.FilmRequest\x1a\v.movie.Film\x12.\n" +
	"\n" +
	"UpdateFilm\x12\v.movie.Film\x1a\x13.movie.FilmResponse\x125\n" +
	"\n" +
	"DeleteFilm\x12\x12.movie.FilmRequest\x1a\x13.movie.FilmResponseB\vZ\tapi/protob\x06proto3"

var (
	file_movie_proto_rawDescOnce sync.Once
	file_movie_proto_rawDescData []byte
)

func file_movie_proto_rawDescGZIP() []byte {
	file_movie_proto_rawDescOnce.Do(func() {
		file_movie_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_movie_proto_rawDesc), len(file_movie_proto_rawDesc)))
	})
	return file_movie_proto_rawDescData
}

var file_movie_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_movie_proto_goTypes = []any{
	(*Film)(nil),         // 0: movie.Film
	(*FilmRequest)(nil),  // 1: movie.FilmRequest
	(*FilmResponse)(nil), // 2: movie.FilmResponse
}
var file_movie_proto_depIdxs = []int32{
	0, // 0: movie.MovieService.CreateFilm:input_type -> movie.Film
	1, // 1: movie.MovieService.GetFilm:input_type -> movie.FilmRequest
	0, // 2: movie.MovieService.UpdateFilm:input_type -> movie.Film
	1, // 3: movie.MovieService.DeleteFilm:input_type -> movie.FilmRequest
	2, // 4: movie.MovieService.CreateFilm:output_type -> movie.FilmResponse
	0, // 5: movie.MovieService.GetFilm:output_type -> movie.Film
	2, // 6: movie.MovieService.UpdateFilm:output_type -> movie.FilmResponse
	2, // 7: movie.MovieService.DeleteFilm:output_type -> movie.FilmResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_movie_proto_init() }
func file_movie_proto_init() {
	if File_movie_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_movie_proto_rawDesc), len(file_movie_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_movie_proto_goTypes,
		DependencyIndexes: file_movie_proto_depIdxs,
		MessageInfos:      file_movie_proto_msgTypes,
	}.Build()
	File_movie_proto = out.File
	file_movie_proto_goTypes = nil
	file_movie_proto_depIdxs = nil
}
